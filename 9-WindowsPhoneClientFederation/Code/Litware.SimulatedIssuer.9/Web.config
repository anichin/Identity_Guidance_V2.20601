<?xml version="1.0"?>

<configuration>
	<configSections>
		<section name="microsoft.identityModel" type="Microsoft.IdentityModel.Configuration.MicrosoftIdentityModelSection, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
	</configSections>
	<appSettings>
		<add key="IssuerName" value="https://localhost/Litware.SimulatedIssuer.9/" />
		<add key="SigningCertificateName" value="CN=litware" />
		<add key="EncryptingCertificateName" value="" />
	</appSettings>
	<location path="FederationMetadata">
		<system.web>
			<authorization>
				<allow users="*" />
			</authorization>
		</system.web>
	</location>
  <location path="RootCert">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
	<system.web>
		<!-- Forms authentication is used here to simulate the windows authentication process. -->
		<authentication mode="Forms">
			<forms loginUrl="SimulatedWindowsAuthentication.aspx" protection="All" timeout="30" name=".STSFORMSAUTH" path="/Litware.SimulatedIssuer.9" requireSSL="true" slidingExpiration="true" defaultUrl="default.aspx" cookieless="UseDeviceProfile" enableCrossAppRedirects="false" />
		</authentication>
		<!-- Deny Anonymous users. -->
		<authorization>
			<deny users="?" />
		</authorization>
		<pages>
			<controls>
				<add tagPrefix="samples" namespace="Samples.Web.UI.Controls" assembly="Samples.Web.UI.Controls" />
			</controls>
		</pages>
    <compilation debug="true" targetFramework="4.0">
      <buildProviders>
        <!-- Get IIS to build .p7b the same as it does .aspx -->
        <remove extension=".p7b" />
        <add extension=".p7b" type="System.Web.Compilation.PageBuildProvider" />
      </buildProviders>
    </compilation>
	</system.web>
  <system.webServer>
    <handlers>
      <!-- Get IIS to handle .p7b the same as it does .aspx -->
      <remove name="PageHandlerFactory-Integrated-4.0-p7b" />
      <add name="PageHandlerFactory-Integrated-4.0-p7b" path="*.p7b" verb="GET,HEAD,POST,DEBUG" type="System.Web.UI.PageHandlerFactory" resourceType="Unspecified" requireAccess="Script" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
    <staticContent>
      <!-- Make sure IIS doesn't think .p7b is static content. -->
      <remove fileExtension=".p7b" />
    </staticContent>
  </system.webServer>
	<!-- 
    This configuration is used by the active federation scenario.
    The WCF service endpoint is a custom issuer which is not intended to be used as production code.
  -->
	<system.serviceModel>
		<services>
			<service name="Microsoft.IdentityModel.Protocols.WSTrust.WSTrustServiceContract" behaviorConfiguration="IssuerBehavior">
				<endpoint address="" contract="Microsoft.IdentityModel.Protocols.WSTrust.IWSTrust13SyncContract" binding="ws2007HttpBinding" bindingConfiguration="LitwareIssuer"></endpoint>
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
			</service>
		</services>
		<bindings>
			<!-- 
        This binding is used to connect to Litware issuer that is acting as an Identity Provider.
        In a production scenario, the configuration should be changed to clientCredentialType="Windows"
        to use windows authentication.
      -->
			<ws2007HttpBinding>
				<binding name="LitwareIssuer">
					<security mode="TransportWithMessageCredential">
						<message clientCredentialType="UserName" establishSecurityContext="false" />
					</security>
				</binding>
			</ws2007HttpBinding>
		</bindings>
		<behaviors>
			<serviceBehaviors>
				<behavior name="IssuerBehavior">
					<serviceCredentials>
						<serviceCertificate x509FindType="FindBySubjectDistinguishedName" findValue="CN=litware" storeLocation="LocalMachine" storeName="My" />
					</serviceCredentials>
					<serviceMetadata httpGetEnabled="true" />
					<serviceDebug includeExceptionDetailInFaults="true" />
				</behavior>
			</serviceBehaviors>
		</behaviors>
	</system.serviceModel>
	<microsoft.identityModel>
		<service>
			<!-- User name and password are not authenticated by windows authentication but a custom verification is done -->
			<securityTokenHandlers>
				<remove type="Microsoft.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
				<add type="Litware.SimulatedIssuer.CustomUserNameSecurityTokenHandler, Litware.SimulatedIssuer" />
			</securityTokenHandlers>
			<serviceCertificate>
        <certificateReference x509FindType="FindByThumbprint" findValue="5a074d678466f59dbd063d1a98b1791474723365" />
			</serviceCertificate>
			<certificateValidation certificateValidationMode="None" />
		</service>
	</microsoft.identityModel>
</configuration>