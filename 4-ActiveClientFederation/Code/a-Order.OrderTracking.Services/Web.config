<?xml version="1.0"?>

<configuration>
	<configSections>
		<section name="microsoft.identityModel" type="Microsoft.IdentityModel.Configuration.MicrosoftIdentityModelSection, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
	</configSections>
	<system.web>
		<compilation debug="true" targetFramework="4.0" />		
	</system.web>
	<system.serviceModel>
		<services>
			<service name="AOrder.OrderTracking.Services.OrderTrackingService" behaviorConfiguration="serviceBehavior">
				<endpoint address="" binding="ws2007FederationHttpBinding" bindingConfiguration="WS2007FederationHttpBinding_IOrderTrackingService" contract="AOrder.OrderTracking.Contracts.IOrderTrackingService" />
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
			</service>
		</services>
		<bindings>
			<!-- This binding is used to connect to a-Order.OrderTracking service which federates authentication to Adatum. -->
			<ws2007FederationHttpBinding>
				<binding name="WS2007FederationHttpBinding_IOrderTrackingService">
					<security mode="Message">
						<message>
							<issuer address="https://localhost/Adatum.FederationProvider.4/Issuer.svc" binding="customBinding" bindingConfiguration="AdatumIssuerIssuedToken"></issuer>
						</message>
					</security>
				</binding>
			</ws2007FederationHttpBinding>
			<!-- This binding is used to connect to Adatum issuer that is acting as a Federation Provider. -->
			<customBinding>
				<binding name="AdatumIssuerIssuedToken">
					<security authenticationMode="IssuedTokenOverTransport" messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10">
						<issuedTokenParameters>
							<issuer address="https://localhost/Litware.SimulatedIssuer.4/Issuer.svc" binding="ws2007HttpBinding" bindingConfiguration="LitwareIssuerUsernameMixed"></issuer>
						</issuedTokenParameters>
					</security>
					<httpsTransport />
				</binding>
			</customBinding>
			<!-- 
        This binding is used to connect to Litware issuer that is acting as an Identity Provider.
        In a production scenario, the configuration should be changed to clientCredentialType="Windows"
        to use windows authentication.
      -->
			<ws2007HttpBinding>
				<binding name="LitwareIssuerUsernameMixed">
					<security mode="TransportWithMessageCredential">
						<message clientCredentialType="UserName" establishSecurityContext="false" />
					</security>
				</binding>
			</ws2007HttpBinding>
		</bindings>
		<!-- By adding this behavior extension, WIF attaches to WCF pipeline processing to verify the token. -->
		<extensions>
			<behaviorExtensions>
				<add name="federatedServiceHostConfiguration" type="Microsoft.IdentityModel.Configuration.ConfigureServiceHostBehaviorExtensionElement, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
			</behaviorExtensions>
		</extensions>
		<behaviors>
			<serviceBehaviors>
				<behavior name="serviceBehavior">
					<federatedServiceHostConfiguration />
					<serviceDebug includeExceptionDetailInFaults="true" />
					<serviceMetadata httpGetEnabled="true" />
				</behavior>
			</serviceBehaviors>
		</behaviors>
		<!-- Uncomment the following lines for tracing the messages when an error occurs in the WCF communication.
    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true"
        logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" />
    </diagnostics>-->
	</system.serviceModel>
	<microsoft.identityModel>
		<service>
			<issuerNameRegistry type="Microsoft.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
				<trustedIssuers>
					<add thumbprint="f260042d59e14817984c6183fbc6bfc71baf5462" name="adatum" />
				</trustedIssuers>
			</issuerNameRegistry>
			<audienceUris>
				<add value="http://localhost/a-Order.OrderTracking.Services/OrderTrackingService.svc" />
			</audienceUris>
			<serviceCertificate>
				<certificateReference findValue="CN=adatum" storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectDistinguishedName" />
			</serviceCertificate>
			<claimsAuthorizationManager type="AOrder.OrderTracking.Services.SimpleClaimsAuthorizationManager, AOrder.OrderTracking.Services" />
		</service>
	</microsoft.identityModel>
	<!-- Uncomment the following lines for debugging when an error occurs in the WCF communication in the server.
       The traces are located in the file specified in the element: 
         - <sharedListeners> -> <add initializeData="{path\file-name}" ... />
       This trace file can be opened with the tool SvcTraceViewer.exe. 
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Verbose">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="xml">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="System.IdentityModel" switchValue="Verbose">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="xml">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="Microsoft.IdentityModel" switchValue="Verbose">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="xml">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Warning, ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelMessageLoggingListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="c:\temp\WCF-service.svclog" type="System.Diagnostics.XmlWriterTraceListener"
        name="xml">
        <filter type="" />
      </add>
      <add initializeData="c:\temp\wcf-service-msvg.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="ServiceModelMessageLoggingListener" traceOutputOptions="Timestamp">
        <filter type="" />
      </add>
    </sharedListeners>
    <trace autoflush="true" />
  </system.diagnostics>-->
</configuration>